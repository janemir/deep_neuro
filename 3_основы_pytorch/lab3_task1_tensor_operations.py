# -*- coding: utf-8 -*-
"""
Created on Sat Mar 15 11:55:46 2025

@author: User
"""
import torch

# 1. Создаем тензор x целочисленного типа, хранящий случайное значение
x = torch.randint(1, 10, (1,), dtype=torch.int32)
print("Исходный тензор x:", x)

# 2. Преобразуем тензор к типу float32 и включаем вычисление градиентов
x = x.float().requires_grad_(True)
print("Тензор x после преобразования к float32 и включения requires_grad:", x)

# 3. Проводим ещё ряд операций с тензором x 
n = 2  # номер по списку группы 19

# Возведение в степень n
x_pow = x ** n
print("x после возведения в степень:", x_pow)

# Умножение на случайное значение в диапазоне от 1 до 10
random_value = torch.randint(1, 11, (1,)).float()
x_mul = x_pow * random_value
print("x после умножения на случайное значение:", x_mul)

# Взятие экспоненты от полученного числа
x_exp = torch.exp(x_mul)
print("x после взятия экспоненты:", x_exp)

# 4. Вычисляем значение производной для полученного значения по x
x_exp.backward()
print("Производная по x:", x.grad)
